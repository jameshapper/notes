[{"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\index.js":"1","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\App.js":"2","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\reportWebVitals.js":"3","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\pages\\login.js":"4","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\pages\\home.js":"5","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\firebase.js":"6","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\note.js":"7","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\chips.js":"8","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\select.js":"9","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\UserContext.js":"10","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\contextChecker.js":"11","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\userContext.js":"12","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\classes.js":"13","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\account.js":"14","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\editortest2.js":"15","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\listcards.js":"16","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\viewnotes.js":"17","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\temp.js":"18","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\badges.js":"19","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\App2.js":"20","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\layout.js":"21","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\badgedetails.js":"22","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\feedback.js":"23","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\students.js":"24","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\studentdetails.js":"25"},{"size":531,"mtime":1625478177503,"results":"26","hashOfConfig":"27"},{"size":845,"mtime":1625471999625,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":2742,"mtime":1626062957702,"results":"30","hashOfConfig":"27"},{"size":5802,"mtime":1625471999635,"results":"31","hashOfConfig":"27"},{"size":678,"mtime":1618708206546,"results":"32","hashOfConfig":"27"},{"size":12668,"mtime":1625623600677,"results":"33","hashOfConfig":"27"},{"size":275,"mtime":1615975291635,"results":"34","hashOfConfig":"27"},{"size":2789,"mtime":1625471999633,"results":"35","hashOfConfig":"27"},{"size":806,"mtime":1612357304510,"results":"36","hashOfConfig":"27"},{"size":311,"mtime":1612357855261,"results":"37","hashOfConfig":"27"},{"size":1523,"mtime":1625560727913,"results":"38","hashOfConfig":"27"},{"size":15279,"mtime":1626252149228,"results":"39","hashOfConfig":"27"},{"size":3070,"mtime":1625471999626,"results":"40","hashOfConfig":"27"},{"size":1170,"mtime":1624461495102,"results":"41","hashOfConfig":"27"},{"size":2931,"mtime":1625471999630,"results":"42","hashOfConfig":"27"},{"size":4157,"mtime":1625471999633,"results":"43","hashOfConfig":"27"},{"size":15562,"mtime":1620273505241,"results":"44","hashOfConfig":"45"},{"size":3548,"mtime":1625795001821,"results":"46","hashOfConfig":"27"},{"size":2950,"mtime":1626267457010,"results":"47","hashOfConfig":"27"},{"size":5432,"mtime":1626056728515,"results":"48","hashOfConfig":"27"},{"size":5622,"mtime":1625843465429,"results":"49","hashOfConfig":"27"},{"size":3552,"mtime":1626056726065,"results":"50","hashOfConfig":"27"},{"size":15790,"mtime":1626267528863,"results":"51","hashOfConfig":"27"},{"size":1579,"mtime":1626267451250,"results":"52","hashOfConfig":"27"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"ys4om1",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"x9ovq5",{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"55"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"55"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"55"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\index.js",[],["108","109"],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\App.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\reportWebVitals.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\pages\\login.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\pages\\home.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\firebase.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\note.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\chips.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\select.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\UserContext.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\contextChecker.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\userContext.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\classes.js",["110","111","112"],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\account.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\editortest2.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\listcards.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\viewnotes.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\temp.js",["113","114"],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\badges.js",["115"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { db } from '../firebase';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport { Typography } from '@material-ui/core';\r\nimport { UserContext } from '../userContext';\r\n\r\nfunction Badges(props) {\r\n\r\n    const { loading } = useContext(UserContext)\r\n\r\n    const [ badges, setBadges ] = useState([])\r\n    const [ uiLoading, setUiLoading ] = useState(loading)\r\n\r\n    useEffect(() => {\r\n        \r\n        return db.collection(\"badges\")\r\n\r\n        .onSnapshot(snapshot => {\r\n            const badgesData = [];\r\n            snapshot.forEach(doc => badgesData.push({ ...doc.data(), id: doc.id }));\r\n            setBadges(badgesData)\r\n            setUiLoading(false)\r\n            console.log('badges are '+badgesData)\r\n        })\r\n    }, []);\r\n\r\n    if (uiLoading === true) {\r\n        return (\r\n            <main sx={{flexGrow:1, p:3}} >\r\n                <Toolbar />\r\n                {uiLoading && <CircularProgress size={150} sx={{\r\n                    position: 'fixed',\r\n                    zIndex: '1000',\r\n                    height: '31px',\r\n                    width: '31px',\r\n                    left: '50%',\r\n                    top: '35%'\r\n                }} />}\r\n            </main>\r\n        );\r\n    } else {\r\n        return (\r\n            <main sx={{flexGrow:1, p:3}}>\r\n                <Toolbar />\r\n\r\n            <Grid container spacing={2}>\r\n                    {badges && badges.length>0 && badges.map((badge) => (\r\n                        <Grid item xs={12} sm={6} key = {badge.id}>\r\n                            <Card sx={{ maxWidth: 345 }}>\r\n                            <CardMedia\r\n                                sx={{ height: 140 }}\r\n                                image={badge.ImageUrl}\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                                {badge.Title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                Lizards are a widespread group of squamate reptiles, with over 6,000\r\n                                species, ranging across all continents except Antarctica\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button component={Link} to={`/badges/${badge.id}`} size=\"small\">See Details</Button>\r\n                                <Button\r\n                                    size=\"small\"\r\n                                >\r\n                                    Add to My Badges\r\n                                </Button>\r\n                            </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Badges;","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\App2.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\layout.js",["116","117"],"import { useContext, useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { UserContext } from \"../userContext\"\r\n\r\nimport Box from '@material-ui/core/Box'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport ShieldIcon from '@material-ui/icons/Shield';\r\nimport { EmojiPeople, RateReview } from '@material-ui/icons';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst menuItemsUser = [\r\n    { \r\n        text: 'My Plans', \r\n        icon: <NotesIcon color=\"secondary\" />, \r\n        path: '/' \r\n    },\r\n    { \r\n        text: 'Account', \r\n        icon: <AccountBoxIcon color=\"secondary\" />, \r\n        path: '/account' \r\n    },\r\n    {\r\n        text: 'Badges',\r\n        icon: <ShieldIcon color=\"secondary\" />,\r\n        path: '/badges'\r\n    }\r\n  ];\r\n\r\n  const menuItemsAdmin = [\r\n    { \r\n        text: 'My Classes', \r\n        icon: <NotesIcon color=\"secondary\" />, \r\n        path: '/classes' \r\n    },\r\n    { \r\n        text: 'Account', \r\n        icon: <AccountBoxIcon color=\"secondary\" />, \r\n        path: '/account' \r\n    },\r\n    {\r\n        text: 'Badges',\r\n        icon: <ShieldIcon color=\"secondary\" />,\r\n        path: '/badges'\r\n    },\r\n    {\r\n        text: 'Feedback',\r\n        icon: <RateReview color=\"secondary\" />,\r\n        path: '/feedback'\r\n    },\r\n    {\r\n        text: 'Students',\r\n        icon: <EmojiPeople color=\"secondary\" />,\r\n        path: '/students'\r\n    }\r\n  ];\r\n\r\nfunction Layout({ children }) {\r\n\r\n    const { currentUser, isAdmin, loading, avatar, logout } = useContext(UserContext);\r\n    const location = useLocation()\r\n    const [ menuItems, setMenuItems ] = useState([])\r\n\r\n    let history = useHistory();\r\n\r\n    if(currentUser){\r\n        console.log('In Layout user is Admin is '+isAdmin)\r\n    } else {\r\n        history.push('/login')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isAdmin){\r\n            setMenuItems(menuItemsAdmin)\r\n        } else {\r\n            setMenuItems(menuItemsUser)\r\n        }\r\n    },[isAdmin])\r\n\r\n\tconst logoutHandler = async(event) => {\r\n        console.log('Logout Clicked');\r\n        await logout().then(() => {\r\n            history.push('/login')\r\n          }).catch((error) => {\r\n            console.log('Error signing out')\r\n          });;\r\n\t};\r\n\r\n    if(currentUser) {\r\n        return (\r\n            <Box sx={{display:'flex'}}>\r\n                <CssBaseline />\r\n                <AppBar position=\"fixed\" sx={{zIndex: (theme) => theme.zIndex.drawer + 1}} >\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            NotesApp\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    sx={{\r\n                        width: drawerWidth,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n                        }}\r\n                >\r\n                    <Toolbar />\r\n                    <Divider />\r\n                    <center>\r\n                        <Avatar alt=\"User Avatar\" src={avatar} sx={{height: 110, width: 100, flexShrink: 0, flexGrow: 0, marginTop: 2}} />\r\n                        <p>\r\n                            {' '}\r\n                            {currentUser && currentUser.displayName ? currentUser.displayName : \"Welcome!\"}\r\n                        </p>\r\n                    </center>\r\n                    <Divider />\r\n                    <List>\r\n                    {menuItems.map((item) => (\r\n                        <ListItem \r\n                        button \r\n                        key={item.text} \r\n                        onClick={() => history.push(item.path)}\r\n                        className={location.pathname == item.path ? null : null}\r\n                        >\r\n                        <ListItemIcon>{item.icon}</ListItemIcon>\r\n                        <ListItemText primary={item.text} />\r\n                        </ListItem>\r\n                    ))}\r\n                        <ListItem\r\n                        button\r\n                        key='logout'\r\n                        onClick={logoutHandler}\r\n                        >\r\n                            <ListItemIcon>\r\n                                {' '}\r\n                                <ExitToAppIcon />{' '}\r\n                                <ListItemText primary='Logout' />\r\n                            </ListItemIcon>\r\n                        </ListItem>\r\n                    </List>\r\n                </Drawer>\r\n                <Box sx={{m:2}} >{children}</Box>\r\n            </Box>    \r\n        )\r\n    } else {\r\n        return <div></div>\r\n    }\r\n\r\n}\r\n\r\nexport default Layout;","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\badgedetails.js",["118"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport { db } from '../firebase';\r\nimport { UserContext } from '../userContext';\r\n\r\nimport { useParams } from 'react-router-dom'\r\nimport Box from '@material-ui/core/Box'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport { Typography } from '@material-ui/core'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { Table, TableContainer, TableHead, TableRow, TableCell, TableBody, Paper, Card, CardMedia } from '@material-ui/core'\r\n\r\n\r\nexport default function BadgeDetails() {\r\n\r\n    const { badgeId } = useParams()\r\n    const { currentUser } = useContext(UserContext)\r\n    const [ badgeDetails, setBadgeDetails ] = useState({})\r\n    const [ updateBadge, setUpdateBadge ] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        \r\n        if(badgeId){\r\n            return db.collection(\"badges\").doc(badgeId).get()\r\n            .then((doc)=> {\r\n                if(doc.exists){\r\n                    let badgeData = doc.data()\r\n                    setBadgeDetails({...badgeData, badgeId: badgeId})\r\n                    console.log('badgeData title is '+badgeData.Title)\r\n                } else {\r\n                    alert(\"I can't find that document\")\r\n                }\r\n            })\r\n        }\r\n\r\n    }, [badgeId]);\r\n\r\n    useEffect(() => {\r\n        if(updateBadge){ return db.collection('users').doc(currentUser.uid)\r\n            .collection('myBadges').add({...badgeDetails,uid: currentUser.uid})\r\n            .then((doc)=>{\r\n                console.log('New badge aspiration added')\r\n                setUpdateBadge(false)\r\n            })\r\n        }\r\n    },[ updateBadge, currentUser.uid, badgeDetails ])\r\n\r\n    const handleAddBadge = (e) => {\r\n        e.preventDefault()\r\n        console.log('badgeDetails submitted object is '+JSON.stringify(badgeDetails))\r\n        let document = db.collection('users').doc(currentUser.uid)\r\n        document.collection('myBadges').where(\"uid\",\"==\",currentUser.uid)\r\n        .where(\"Title\",\"==\",badgeDetails.Title).get()\r\n        .then((snapshot) => {\r\n            console.log('number of docs in snapshot is '+snapshot.size)\r\n            if(snapshot.size === 0){\r\n                setUpdateBadge(true)\r\n            } else {\r\n                setUpdateBadge(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    console.log('reached the BadgeDetails component with id of '+badgeId)\r\n    return (\r\n        <>\r\n            <Toolbar />\r\n            <IconButton\r\n                sx={{\r\n                    position: 'fixed',\r\n                    bottom: 0,\r\n                    right: 0\r\n                }}\r\n                color=\"primary\"\r\n                aria-label=\"Add Badge\"\r\n                onClick={handleAddBadge}\r\n            >\r\n                <AddCircleIcon sx={{ fontSize: 60 }} />\r\n            </IconButton>\r\n\r\n            <Box sx={{flexGrow:1, p:3}} >\r\n                <Box sx={{mx:'auto', width:180}}>\r\n                    <Card sx={{ maxWidth: 345 }}>\r\n                                <CardMedia\r\n                                    sx={{ height: 140 }}\r\n                                    image={badgeDetails.ImageUrl}\r\n                                    title=\"Contemplative Reptile\"\r\n                                />\r\n                    </Card>\r\n                </Box>\r\n                {badgeId && badgeDetails.Criteria && \r\n                <TableContainer component={Paper} sx={{borderRadius:2, m:1, maxWidth:950}}>\r\n                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"right\" sx={{fontWeight:'bold',backgroundColor:(theme)=>theme.palette.secondary.main, color: (theme)=>theme.palette.getContrastText(theme.palette.secondary.main)}}>Criterion</TableCell>\r\n                            <TableCell align=\"right\" sx={{fontWeight:'bold',backgroundColor:(theme)=>theme.palette.secondary.main, color: (theme)=>theme.palette.getContrastText(theme.palette.secondary.main)}}>Level</TableCell>\r\n                            <TableCell align=\"left\" sx={{fontWeight:'bold',backgroundColor:(theme)=>theme.palette.secondary.main, color: (theme)=>theme.palette.getContrastText(theme.palette.secondary.main)}}>Description</TableCell>\r\n                            <TableCell align=\"right\" sx={{fontWeight:'bold',backgroundColor:(theme)=>theme.palette.secondary.main, color: (theme)=>theme.palette.getContrastText(theme.palette.secondary.main)}}>Total Crits</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {badgeDetails.Criteria.map((row) => (\r\n                            <TableRow\r\n                            key={row.Label}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {row.Label}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{row.Level}</TableCell>\r\n                            <TableCell align=\"left\">{row.Description}</TableCell>\r\n                            <TableCell align=\"right\" sx={{fontWeight:'bold'}}>{row.Crits}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                }\r\n            </Box>\r\n\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\feedback.js",["119"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { db } from '../firebase';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport { Typography } from '@material-ui/core';\r\nimport { UserContext } from '../userContext';\r\n\r\nfunction Feedback(props) {\r\n\r\n    const { loading } = useContext(UserContext)\r\n\r\n    const [ badges, setBadges ] = useState([])\r\n    const [ uiLoading, setUiLoading ] = useState(loading)\r\n\r\n    useEffect(() => {\r\n        \r\n        return db.collection(\"badges\")\r\n\r\n        .onSnapshot(snapshot => {\r\n            const badgesData = [];\r\n            snapshot.forEach(doc => badgesData.push({ ...doc.data(), id: doc.id }));\r\n            setBadges(badgesData)\r\n            setUiLoading(false)\r\n            console.log('badges are '+badgesData)\r\n        })\r\n    }, []);\r\n\r\n    if (uiLoading === true) {\r\n        return (\r\n            <main sx={{flexGrow:1, p:3}} >\r\n                <Toolbar />\r\n                {uiLoading && <CircularProgress size={150} sx={{\r\n                    position: 'fixed',\r\n                    zIndex: '1000',\r\n                    height: '31px',\r\n                    width: '31px',\r\n                    left: '50%',\r\n                    top: '35%'\r\n                }} />}\r\n            </main>\r\n        );\r\n    } else {\r\n        return (\r\n            <main sx={{flexGrow:1, p:3}}>\r\n                <Toolbar />\r\n\r\n            <Grid container spacing={2}>\r\n                    {badges && badges.length>0 && badges.map((badge) => (\r\n                        <Grid item xs={12} sm={6} key = {badge.id}>\r\n                            <Card sx={{ maxWidth: 345 }}>\r\n                            <CardMedia\r\n                                sx={{ height: 140 }}\r\n                                image={badge.ImageUrl}\r\n                                title=\"Contemplative Reptile\"\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                                {badge.Title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                Lizards are a widespread group of squamate reptiles, with over 6,000\r\n                                species, ranging across all continents except Antarctica\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button component={Link} to={`/badges/${badge.id}`} size=\"small\">See Details</Button>\r\n                                <Button\r\n                                    size=\"small\"\r\n                                >\r\n                                    Add to My Badges\r\n                                </Button>\r\n                            </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Feedback;","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\students.js",["120","121"],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\studentdetails.js",["122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":28,"column":10,"nodeType":"144","messageId":"145","endLine":28,"endColumn":30},{"ruleId":"142","severity":1,"message":"146","line":39,"column":13,"nodeType":"144","messageId":"145","endLine":39,"endColumn":17},{"ruleId":"142","severity":1,"message":"147","line":53,"column":13,"nodeType":"144","messageId":"145","endLine":53,"endColumn":19},{"ruleId":"142","severity":1,"message":"146","line":103,"column":13,"nodeType":"144","messageId":"145","endLine":103,"endColumn":17},{"ruleId":"142","severity":1,"message":"147","line":119,"column":13,"nodeType":"144","messageId":"145","endLine":119,"endColumn":19},{"ruleId":"142","severity":1,"message":"148","line":11,"column":8,"nodeType":"144","messageId":"145","endLine":11,"endColumn":18},{"ruleId":"142","severity":1,"message":"149","line":73,"column":35,"nodeType":"144","messageId":"145","endLine":73,"endColumn":42},{"ruleId":"150","severity":1,"message":"151","line":137,"column":54,"nodeType":"152","messageId":"153","endLine":137,"endColumn":56},{"ruleId":"142","severity":1,"message":"154","line":8,"column":10,"nodeType":"144","messageId":"145","endLine":8,"endColumn":20},{"ruleId":"142","severity":1,"message":"148","line":11,"column":8,"nodeType":"144","messageId":"145","endLine":11,"endColumn":18},{"ruleId":"142","severity":1,"message":"155","line":4,"column":10,"nodeType":"144","messageId":"145","endLine":4,"endColumn":20},{"ruleId":"142","severity":1,"message":"156","line":35,"column":24,"nodeType":"144","messageId":"145","endLine":35,"endColumn":36},{"ruleId":"142","severity":1,"message":"154","line":8,"column":10,"nodeType":"144","messageId":"145","endLine":8,"endColumn":20},{"ruleId":"142","severity":1,"message":"157","line":9,"column":8,"nodeType":"144","messageId":"145","endLine":9,"endColumn":18},{"ruleId":"142","severity":1,"message":"158","line":10,"column":8,"nodeType":"144","messageId":"145","endLine":10,"endColumn":21},{"ruleId":"142","severity":1,"message":"159","line":11,"column":10,"nodeType":"144","messageId":"145","endLine":11,"endColumn":15},{"ruleId":"142","severity":1,"message":"160","line":11,"column":17,"nodeType":"144","messageId":"145","endLine":11,"endColumn":31},{"ruleId":"142","severity":1,"message":"161","line":11,"column":33,"nodeType":"144","messageId":"145","endLine":11,"endColumn":42},{"ruleId":"142","severity":1,"message":"162","line":11,"column":44,"nodeType":"144","messageId":"145","endLine":11,"endColumn":52},{"ruleId":"142","severity":1,"message":"163","line":11,"column":54,"nodeType":"144","messageId":"145","endLine":11,"endColumn":63},{"ruleId":"142","severity":1,"message":"164","line":11,"column":65,"nodeType":"144","messageId":"145","endLine":11,"endColumn":74},{"ruleId":"142","severity":1,"message":"165","line":11,"column":76,"nodeType":"144","messageId":"145","endLine":11,"endColumn":81},{"ruleId":"142","severity":1,"message":"166","line":11,"column":83,"nodeType":"144","messageId":"145","endLine":11,"endColumn":87},{"ruleId":"142","severity":1,"message":"167","line":11,"column":89,"nodeType":"144","messageId":"145","endLine":11,"endColumn":98},{"ruleId":"142","severity":1,"message":"168","line":17,"column":13,"nodeType":"144","messageId":"145","endLine":17,"endColumn":24},{"ruleId":"142","severity":1,"message":"169","line":18,"column":13,"nodeType":"144","messageId":"145","endLine":18,"endColumn":27},{"ruleId":"142","severity":1,"message":"170","line":19,"column":13,"nodeType":"144","messageId":"145","endLine":19,"endColumn":26},{"ruleId":"142","severity":1,"message":"171","line":19,"column":28,"nodeType":"144","messageId":"145","endLine":19,"endColumn":44},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'PanoramaFishEyeSharp' is defined but never used.","Identifier","unusedVar","'body' is assigned a value but never used.","'errors' is assigned a value but never used.","'CardHeader' is defined but never used.","'loading' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Typography' is defined but never used.","'useHistory' is defined but never used.","'setUiLoading' is assigned a value but never used.","'IconButton' is defined but never used.","'AddCircleIcon' is defined but never used.","'Table' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'TableCell' is defined but never used.","'TableBody' is defined but never used.","'Paper' is defined but never used.","'Card' is defined but never used.","'CardMedia' is defined but never used.","'currentUser' is assigned a value but never used.","'studentDetails' is assigned a value but never used.","'updateStudent' is assigned a value but never used.","'setUpdateStudent' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]