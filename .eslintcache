[{"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\index.js":"1","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\App.js":"2","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\reportWebVitals.js":"3","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\pages\\login.js":"4","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\pages\\home.js":"5","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\firebase.js":"6","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\note.js":"7","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\chips.js":"8","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\select.js":"9","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\UserContext.js":"10","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\contextChecker.js":"11","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\userContext.js":"12","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\classes.js":"13","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\account.js":"14","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\editortest2.js":"15","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\listcards.js":"16","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\viewnotes.js":"17","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\temp.js":"18","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\badges.js":"19","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\App2.js":"20","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\layout.js":"21"},{"size":531,"mtime":1625478177503,"results":"22","hashOfConfig":"23"},{"size":845,"mtime":1625471999625,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":2585,"mtime":1625471999637,"results":"26","hashOfConfig":"23"},{"size":5802,"mtime":1625471999635,"results":"27","hashOfConfig":"23"},{"size":678,"mtime":1618708206546,"results":"28","hashOfConfig":"23"},{"size":12668,"mtime":1625471999631,"results":"29","hashOfConfig":"23"},{"size":275,"mtime":1615975291635,"results":"30","hashOfConfig":"23"},{"size":2789,"mtime":1625471999633,"results":"31","hashOfConfig":"23"},{"size":806,"mtime":1612357304510,"results":"32","hashOfConfig":"23"},{"size":311,"mtime":1612357855261,"results":"33","hashOfConfig":"23"},{"size":1523,"mtime":1625560727913,"results":"34","hashOfConfig":"23"},{"size":14277,"mtime":1625471999628,"results":"35","hashOfConfig":"23"},{"size":3070,"mtime":1625471999626,"results":"36","hashOfConfig":"23"},{"size":1170,"mtime":1624461495102,"results":"37","hashOfConfig":"23"},{"size":2931,"mtime":1625471999630,"results":"38","hashOfConfig":"23"},{"size":4157,"mtime":1625471999633,"results":"39","hashOfConfig":"23"},{"size":15562,"mtime":1620273505241,"results":"40","hashOfConfig":"41"},{"size":2294,"mtime":1625471999627,"results":"42","hashOfConfig":"23"},{"size":2391,"mtime":1625561168570,"results":"43","hashOfConfig":"23"},{"size":5132,"mtime":1625541885556,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"ys4om1",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"x9ovq5",{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\index.js",[],["90","91"],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\App.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\reportWebVitals.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\pages\\login.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\pages\\home.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\firebase.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\note.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\chips.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\select.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\UserContext.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\contextChecker.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\userContext.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\classes.js",["92","93","94","95","96"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport firebase, { db, auth } from '../firebase';\r\nimport { UserContext } from '../userContext';\r\nimport ListCards from './listcards'\r\nimport ViewNotes from './viewnotes'\r\n\r\nimport Datepicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport MultiSelect from \"react-multi-select-component\";\r\n\r\nimport Box from '@material-ui/core/Box'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport { PanoramaFishEyeSharp } from '@material-ui/icons';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n\treturn <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction TeacherClasses(props) {\r\n\r\n    const [ user ] = useState(auth.currentUser)\r\n\r\n    const [ title, setTitle ] = useState('')\r\n    const [ body, setBody ] = useState('')\r\n    const [ noteId, setNoteId ] = useState('')\r\n    const [ studentId, setStudentId ] = useState('')\r\n    const [ selectedStudents, setSelectedStudents ] = useState([])\r\n\r\n    const [ students10, setStudents10 ] = useState([])\r\n    const [ students20, setStudents20 ] = useState([])\r\n    const [ students30, setStudents30 ] = useState([])\r\n\r\n    const [ currentClass, setCurrentClass ] = useState([])\r\n    const [ created, setCreated ] = useState(\"\")\r\n    const [ author, setAuthor ] = useState(\"\")\r\n    const [ noteAvatar, setNoteAvatar ] = useState(\"\")\r\n\r\n    const [ errors, setErrors ] = useState([])\r\n    const [ open, setOpen ] = useState(false)\r\n    const [ viewOpen, setViewOpen ] = useState(false)\r\n    const [ uiLoading, setUiLoading ] = useState(true)\r\n\r\n    const [ teacherClasses, setTeacherClasses ] = useState([]);\r\n    const [ notes, setNotes ] = useState([]);\r\n    const [ selectedDate, setSelectedDate ] = useState(new Date(Date.now() - 604800000))\r\n\r\n    const [ selected, setSelected ] = useState([])\r\n    const [ rt, setRt ] = useState(\"\")\r\n    const [ commentBody, setCommentBody ] = useState(\"\")\r\n    const [ commentRt, setCommentRt ] = useState(\"\")\r\n    const [ comments, setComments ] = useState([])\r\n\r\n    const { avatar } = useContext(UserContext)\r\n\r\n    useEffect(() => {\r\n        \r\n        console.log(\"User\",user)\r\n        if(user){\r\n            return db.collection(\"users\").doc(user.uid).get()\r\n            .then((doc) => {\r\n                if (doc.exists) {\r\n                    let teacherData = doc.data()\r\n                    console.log(\"Document data:\", teacherData);\r\n                    setTeacherClasses(teacherData.classes)\r\n                    setUiLoading(false)\r\n                } else {\r\n                    // doc.data() will be undefined in this case\r\n                    console.log(\"No such teacher document!\");\r\n                }\r\n            })\r\n        }\r\n\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        //console.log('selected ids are '+selected.map((student) => student.value))\r\n        //setSelectedStudents(selected.map(a => a.value))\r\n        setStudents10(selected.map(a=>a.value).slice(0,10))\r\n        setStudents20(selected.map(a=>a.value).slice(10,20))\r\n        setStudents30(selected.map(a=>a.value).slice(20,30))\r\n\r\n    },[selected])\r\n\r\n    const DialogTitle = ((props) => {\r\n        const { children, onClose, classes, ...other } = props;\r\n        return (\r\n            <MuiDialogTitle disableTypography sx={{minWidth:220}} {...other}>\r\n                <Typography variant=\"h6\">{children}</Typography>\r\n                {onClose ? (\r\n                    <IconButton aria-label=\"close\" sx={{\r\n                        position: 'absolute',\r\n                        right: 8,\r\n                        top: 9,\r\n                        color: '#e0e0e0'\r\n                    }} onClick={onClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                ) : null}\r\n            </MuiDialogTitle>\r\n        );\r\n    });\r\n\r\n    dayjs.extend(relativeTime);\r\n    const { classes } = props;\r\n\r\n    const handleSelectOpen = (teacherClass) => {\r\n        setTitle(teacherClass.name)\r\n        setCurrentClass(teacherClass.students)\r\n        setOpen(true)\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let notes10 = []\r\n        let notes20 = []\r\n        let notes30 = []\r\n\r\n        let recentDate = selectedDate\r\n        console.log('students in array groups lengths '+students10.length+students20.length+students30.length)\r\n\r\n        if(students10.length>0){\r\n            let first10 = await\r\n            db.collectionGroup('notes')\r\n            .where('uid','in', students10)\r\n            .where(\"timestamp\", \">=\", recentDate)\r\n            .orderBy(\"timestamp\",\"desc\")\r\n            .get()\r\n\r\n            first10.forEach((doc) => {\r\n                notes10.push({ ...doc.data(), id: doc.id })\r\n            })\r\n        }\r\n\r\n        if(students20.length>0){\r\n            let second10 = await\r\n            db.collectionGroup('notes')\r\n            .where('uid','in', students20)\r\n            .where(\"timestamp\", \">=\", recentDate)\r\n            .orderBy(\"timestamp\",\"desc\")\r\n            .get()\r\n\r\n            second10.forEach((doc) => {\r\n            notes20.push({ ...doc.data(), id: doc.id })\r\n            })\r\n        }\r\n\r\n        if(students30.length>0){\r\n            let third10 = await\r\n            db.collectionGroup('notes')\r\n            .where('uid','in', students30)\r\n            .where(\"timestamp\", \">=\", recentDate)\r\n            .orderBy(\"timestamp\",\"desc\")\r\n            .get()\r\n\r\n            third10.forEach((doc) => {\r\n            notes30.push({ ...doc.data(), id: doc.id })\r\n            })\r\n        }\r\n\r\n        setNotes(notes10.concat(notes20,notes30))\r\n        setOpen(false)\r\n        //console.log(\"notes10 is \"+notes10.length+\" notes20 is \"+notes20.length+\" and notes30 is \"+notes30.length)\r\n\r\n    };\r\n\r\n    const handleSubmitComment = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (false) {\r\n\r\n        } else {\r\n            const newComment = {\r\n                body: commentBody,\r\n                createdAt: new Date().toISOString(),\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                uid: user.uid,\r\n                author: user.displayName,\r\n                avatar: avatar,\r\n                rt: commentRt,\r\n                studentId: studentId,\r\n                noteId: noteId\r\n            }\r\n            db.collection('users').doc(studentId).collection('notes').doc(noteId).collection('comments').add(newComment)\r\n            .then((doc)=>{\r\n                console.log(\"New comment added to db\")\r\n                setViewOpen(false);\r\n            })\r\n            .then(() => {\r\n                let noteRef = db.collection('users').doc(studentId).collection('notes').doc(noteId)\r\n                noteRef.update({ commentNum: firebase.firestore.FieldValue.increment(1)})\r\n            })\r\n            .catch((error) => {\r\n                setErrors(error)\r\n                setOpen(true)\r\n                console.error(error);\r\n                alert('Something went wrong' );\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleViewOpen = (note) => {\r\n        setTitle(note.title)\r\n        setBody(note.body)\r\n        setNoteId(note.id)\r\n        setStudentId(note.uid)\r\n        setCreated(note.createdAt)\r\n        setAuthor(note.author)\r\n        setRt(note.rt)\r\n        setNoteAvatar(note.avatar)\r\n        setViewOpen(true)\r\n\t}\r\n\r\n    useEffect(() => {\r\n        \r\n        if(noteId){\r\n            return db.collectionGroup(\"comments\")\r\n            .where(\"noteId\",\"==\",noteId)\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                const commentsData = [];\r\n                querySnapshot.forEach((doc) => {\r\n                    commentsData.push({ ...doc.data(), id: doc.id })\r\n                    console.log(\"comment doc id is \"+doc.id)\r\n                })\r\n                setComments(commentsData)\r\n            })\r\n            .catch((error) => {\r\n                alert('something wrong while looking for comments')\r\n                console.log(error)\r\n            })\r\n        }\r\n    }, [noteId]);\r\n\r\n    const handleViewClose = () => setViewOpen(false);\r\n\r\n    const handleClose = (event) => setOpen(false);\r\n\r\n    if (uiLoading === true) {\r\n        return (\r\n            <main sx={{flexGrow:1, p:3}} >\r\n                <Toolbar />\r\n                {uiLoading && <CircularProgress size={150} sx={{\r\n                    position: 'fixed',\r\n                    zIndex: '1000',\r\n                    height: '31px',\r\n                    width: '31px',\r\n                    left: '50%',\r\n                    top: '35%'\r\n                }} />}\r\n            </main>\r\n        );\r\n    } else {\r\n        return (\r\n            <main sx={{flexGrow:1, p: 3}}>\r\n                <Toolbar />\r\n\r\n                <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n                    <AppBar sx={{position: 'relative'}} >\r\n                        <Toolbar>\r\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\" sx={{ml:2, flex:1}} >\r\n                                Select students to view recent notes\r\n                            </Typography>\r\n                            <Button\r\n                                autoFocus\r\n                                color=\"inherit\"\r\n                                onClick={handleSubmit}\r\n                                sx={{\r\n                                    display: 'block',\r\n                                    color: 'white',\r\n                                    textAlign: 'center',\r\n                                    position: 'absolute',\r\n                                    top: 14,\r\n                                    right: 10\r\n                                }}\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n\r\n                    <Box component=\"form\"\r\n                    sx={{\r\n                        width: '98%',\r\n                        marginLeft: 2,\r\n                        marginTop: 3\r\n                    }} noValidate>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} key='date'>\r\n                                <Typography>\r\n                                    How far back do you want to see notes?\r\n                                </Typography>\r\n                                <Datepicker \r\n                                    selected={selectedDate} \r\n                                    onChange={date => setSelectedDate(date)}\r\n                                    maxDate={new Date()}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} key='title'>\r\n\t\t\t\t\t\t\t\t<DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n\t\t\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t\t\t</DialogTitle>\r\n                            </Grid>\r\n\r\n                            <Grid>\r\n                                <div>\r\n                                    <h1>Select Students</h1>\r\n                                    <MultiSelect\r\n                                    options={currentClass}\r\n                                    value={selected}\r\n                                    onChange={setSelected}\r\n                                    labelledBy={\"Select\"}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Dialog>\r\n\r\n                <Grid container spacing={8} justify='center'>\r\n                    {teacherClasses.map((teacherClass) => (\r\n                        <Grid item xs={8} sm={6} key = {teacherClass.name}>\r\n                            <Card sx={{minWidth:220}} variant=\"outlined\">\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\" component=\"h3\">\r\n                                        {teacherClass.name}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Button size=\"small\" color=\"primary\" onClick={() => handleSelectOpen( teacherClass )}>\r\n                                        {' '}\r\n                                        Select Students{' '}\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n\r\n                { notes && notes.length > 0 && \r\n                    <ListCards notes={notes} handleEditOpen={()=>alert('permission denied')} handleViewOpen={handleViewOpen} deleteNoteHandler={()=>alert('permission denied')} canEdit={false}/>\r\n                }\r\n  \r\n                <ViewNotes handleViewClose={handleViewClose} viewOpen={viewOpen} title={title} author={author} created={created} avatar={noteAvatar} comments={comments} rt={rt} classes={classes} handleSubmitComment={handleSubmitComment} setCommentBody={setCommentBody} setCommentRt={setCommentRt} commentRt={commentRt}/>\r\n\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeacherClasses;\r\n","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\account.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\editortest2.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\listcards.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\viewnotes.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\temp.js",["97","98"],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\badges.js",["99","100","101","102"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { db, storage } from '../firebase';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport { UserContext } from '../userContext';\r\n\r\nfunction Badges(props) {\r\n\r\n    const { currentUser, loading } = useContext(UserContext)\r\n\r\n\tconst [ fileUpload, setFileUpload ] = useState(null)\r\n    const [ data, setData ] = useState([])\r\n  \r\n    const onFileChange = async (e) => {\r\n\t  setFileUpload(e.target.files[0])\r\n    };\r\n\r\n    const getData=()=>{\r\n        fetch(fileUpload\r\n        ,{\r\n          headers : { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n           }\r\n        }\r\n        )\r\n          .then(function(response){\r\n            console.log(response)\r\n            return response.json();\r\n          })\r\n          .then(function(myJson) {\r\n            console.log(myJson);\r\n            setData(myJson)\r\n          });\r\n      }\r\n      useEffect(()=>{\r\n        getData()\r\n      },[])\r\n  \r\n    const onSubmit = async () => {\r\n\r\n\t  console.log('file upload name is '+fileUpload.name)\r\n\r\n    };\r\n\r\n    if (loading === true) {\r\n        return (\r\n            <main sx={{flexGrow:1, p:3}} >\r\n                <Toolbar />\r\n                {loading && <CircularProgress size={150} sx={{\r\n                    position: 'fixed',\r\n                    zIndex: '1000',\r\n                    height: '31px',\r\n                    width: '31px',\r\n                    left: '50%',\r\n                    top: '35%'\r\n                }} />}\r\n            </main>\r\n        );\r\n    } else {\r\n        return (\r\n            <main sx={{flexGrow:1, p:3}}>\r\n                <Toolbar />\r\n\r\n                <center>\r\n                    <p>\r\n                        {'Badges list table goes here '}\r\n                    </p>\r\n                </center>\r\n\r\n                <center>\r\n                    <div>\r\n                        {data && data.length>0 && data.map((item)=><p>{item.about}</p>)}\r\n                    </div>\r\n                </center>\r\n\r\n\t\t\t\t<input type=\"file\" onChange={onFileChange} />\r\n\t\t\t\t<button onClick = {onSubmit}> Submit New Badge </button>\r\n\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Badges;","C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\App2.js",[],"C:\\Users\\happe\\Documents\\AppProjects\\progress_notes\\src\\components\\layout.js",["103","104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":28,"column":10,"nodeType":"111","messageId":"112","endLine":28,"endColumn":30},{"ruleId":"109","severity":1,"message":"113","line":39,"column":13,"nodeType":"111","messageId":"112","endLine":39,"endColumn":17},{"ruleId":"109","severity":1,"message":"114","line":42,"column":13,"nodeType":"111","messageId":"112","endLine":42,"endColumn":29},{"ruleId":"109","severity":1,"message":"115","line":42,"column":31,"nodeType":"111","messageId":"112","endLine":42,"endColumn":50},{"ruleId":"109","severity":1,"message":"116","line":53,"column":13,"nodeType":"111","messageId":"112","endLine":53,"endColumn":19},{"ruleId":"109","severity":1,"message":"113","line":103,"column":13,"nodeType":"111","messageId":"112","endLine":103,"endColumn":17},{"ruleId":"109","severity":1,"message":"116","line":119,"column":13,"nodeType":"111","messageId":"112","endLine":119,"endColumn":19},{"ruleId":"109","severity":1,"message":"117","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":12},{"ruleId":"109","severity":1,"message":"118","line":2,"column":14,"nodeType":"111","messageId":"112","endLine":2,"endColumn":21},{"ruleId":"109","severity":1,"message":"119","line":10,"column":13,"nodeType":"111","messageId":"112","endLine":10,"endColumn":24},{"ruleId":"120","severity":1,"message":"121","line":39,"column":9,"nodeType":"122","endLine":39,"endColumn":11,"suggestions":"123"},{"ruleId":"109","severity":1,"message":"124","line":62,"column":35,"nodeType":"111","messageId":"112","endLine":62,"endColumn":42},{"ruleId":"125","severity":1,"message":"126","line":126,"column":54,"nodeType":"127","messageId":"128","endLine":126,"endColumn":56},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'PanoramaFishEyeSharp' is defined but never used.","Identifier","unusedVar","'body' is assigned a value but never used.","'selectedStudents' is assigned a value but never used.","'setSelectedStudents' is assigned a value but never used.","'errors' is assigned a value but never used.","'db' is defined but never used.","'storage' is defined but never used.","'currentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["131"],"'loading' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},"Update the dependencies array to be: [getData]",{"range":"134","text":"135"},[1070,1072],"[getData]"]