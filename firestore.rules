rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function editOnlyChangesFields(allowedFields){
      let affectedKeys = request.resource.data.diff(resource.data).affectedKeys();
      return affectedKeys.hasOnly(allowedFields);
    }

    match /{somePath=**}/notes/{noteId} {
      function noteHasOnlyAllowedFields() {
        let requiredAndOptionalFields = ['title', 'body', 'uid', 'createdAt', 'timestamp','activities','author','avatar'];
        return request.resource.data.keys().hasOnly(requiredAndOptionalFields);
      }

      allow read: if request.auth.uid == resource.data.uid
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get("admin",false) ? get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true : false

      allow create: if request.auth.uid == request.resource.data.uid && noteHasOnlyAllowedFields()
      allow update, delete: if request.auth.uid == resource.data.uid && noteHasOnlyAllowedFields() && editOnlyChangesFields(['title', 'body', 'createdAt', 'timestamp', 'activities'])

    }

    match /users/{userId} {
      function userHasOnlyAllowedFields() {
        let requiredAndOptionalFields = ['firstName', 'lastName', 'fullName', 'email','avatar'];
        return request.resource.data.keys().hasOnly(requiredAndOptionalFields);
      }
      allow read: if (request.auth.uid == userId)
      allow create: if request.auth.uid == userId && userHasOnlyAllowedFields()
      allow update: if request.auth.uid == userId && editOnlyChangesFields(['avatar'])
    }

    match /{somePath=**}/comments/{commentId} {
      function noteHasOnlyAllowedFields() {
        let requiredAndOptionalFields = ['body', 'uid', 'createdAt', 'timestamp','author','avatar','rt','studentId','noteId'];
        return request.resource.data.keys().hasOnly(requiredAndOptionalFields);
      }

      allow read: if request.auth.uid == resource.data.uid
      allow read: if request.auth.uid == resource.data.studentId
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get("admin",false) ? get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true : false

      allow create: if request.auth.uid == request.resource.data.uid && noteHasOnlyAllowedFields()
      allow update: if request.auth.uid == resource.data.uid && noteHasOnlyAllowedFields() && editOnlyChangesFields(['body', 'createdAt', 'timestamp', 'activities','rt'])

    }

  }
}